// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OneShotCampaign {
  id               Int          @id @default(autoincrement()) // Primary key with auto-increment
  campaign_title   String       // Title of the campaign
  setting          String       // Setting of the campaign
  setting_details  String       // Detailed description of the setting
  introduction     String       // Campaign introduction
  ending           String       // Campaign ending
  tone             String       // Tone of the campaign
  key_npcs         NPC[]        // Relationship with NPCs
  encounters       Encounter[]  // Relationship with encounters
  rewards          String[]    // Array of rewards (nullable)
  //Story-driven Fields
  location         String       // Location of the campaign
  theme            String       // Focus on a main theme
  party_composition String      // Player Composition
  //Player-specific Fields 
  length           String       // Total play time
  preferences      String       // The type of campaign
  }


model NPC {
  id          Int              @id @default(autoincrement()) // Primary key with auto-increment
  name        String           // Name of the NPC
  role        String           // Role of the NPC
  description String           // Description of the NPC
  campaignId  Int              // Foreign key to OneShotCampaign
  campaign    OneShotCampaign  @relation(fields: [campaignId], references: [id], onDelete: Cascade) // Relationship with OneShotCampaign
}

model Encounter {
  id          Int              @id @default(autoincrement()) // Primary key with auto-increment
  description String           // Description of the encounter
  enemy_types String[]         // Array of enemy types
  difficulty  String           // Difficulty level
  rewards     String[]        // Array of rewards (nullable)
  campaignId  Int              // Foreign key to OneShotCampaign
  campaign    OneShotCampaign  @relation(fields: [campaignId], references: [id], onDelete: Cascade) // Relationship with OneShotCampaign
}

